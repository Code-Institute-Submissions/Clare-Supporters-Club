{"changed":true,"filter":false,"title":"views.py","tooltip":"/checkout/views.py","value":"from django.shortcuts import render, get_object_or_404, reverse, redirect\nfrom django.contrib.auth.decorators import login_required\nfrom django.contrib import messages\nfrom .forms import MakePaymentForm, OrderForm\nfrom .models import OrderLineItem\nfrom django.conf import settings\nfrom django.utils import timezone\nfrom products.models import Product\nimport stripe\n\n\n# Create your views here.\n\nstripe.api_key = settings.STRIPE_SECRET\n\n@login_required()\ndef checkout(request):\n    if request.method==\"POST\":\n        order_form = OrderForm(request.POST)\n        payment_form = MakePaymentForm(request.POST)\n        \n        if order_form.is_valid() and payment_form.is_valid():\n            order = order_form.save(commit=False)\n            order.date = timezone.now()\n            order.save()\n            \n            cart = request.session.get('cart', {})\n            total = 0\n            for id, quantity in cart.items():\n                product = get_object_or_404(Product, pk=id)\n                total += quantity * product.price\n                order_line_item = OrderLineItem(\n                    order = order, \n                    product = product, \n                    quantity = quantity\n                    )\n                order_line_item.save()\n                \n            try:\n                customer = stripe.Charge.create(\n                    amount = int(total * 100),\n                    currency = \"EUR\",\n                    description = request.user.email,\n                    card = payment_form.cleaned_data['stripe_id'],\n                )\n            except stripe.error.CardError:\n                messages.error(request, \"Your card was declined!\")\n                \n            if customer.paid:\n                messages.error(request, \"You have successfully paid\")\n                request.session['cart'] = {}\n                return redirect(reverse('products'))\n            else:\n                messages.error(request, \"Unable to take payment\")\n        else:\n            print(payment_form.errors)\n            messages.error(request, \"We were unable to take a payment with that card!\")\n    else:\n        payment_form = MakePaymentForm()\n        order_form = OrderForm()\n        \n    return render(request, \"checkout.html\", {'order_form': order_form, 'payment_form': payment_form, 'publishable': settings.STRIPE_PUBLISHABLE})","undoManager":{"mark":-2,"position":0,"stack":[[{"start":{"row":0,"column":8},"end":{"row":3,"column":0},"action":"remove","lines":["ngo.shortcuts import render","","# Create your views here.",""],"id":2},{"start":{"row":0,"column":7},"end":{"row":0,"column":8},"action":"remove","lines":["a"]},{"start":{"row":0,"column":6},"end":{"row":0,"column":7},"action":"remove","lines":["j"]},{"start":{"row":0,"column":5},"end":{"row":0,"column":6},"action":"remove","lines":["d"]},{"start":{"row":0,"column":4},"end":{"row":0,"column":5},"action":"remove","lines":[" "]},{"start":{"row":0,"column":3},"end":{"row":0,"column":4},"action":"remove","lines":["m"]},{"start":{"row":0,"column":2},"end":{"row":0,"column":3},"action":"remove","lines":["o"]},{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"remove","lines":["r"]},{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"remove","lines":["f"]},{"start":{"row":0,"column":0},"end":{"row":61,"column":145},"action":"insert","lines":["from django.shortcuts import render, get_object_or_404, reverse, redirect","from django.contrib.auth.decorators import login_required","from django.contrib import messages","from .forms import MakePaymentForm, OrderForm","from .models import OrderLineItem","from django.conf import settings","from django.utils import timezone","from products.models import Product","import stripe","","","# Create your views here.","","stripe.api_key = settings.STRIPE_SECRET","","@login_required()","def checkout(request):","    if request.method==\"POST\":","        order_form = OrderForm(request.POST)","        payment_form = MakePaymentForm(request.POST)","        ","        if order_form.is_valid() and payment_form.is_valid():","            order = order_form.save(commit=False)","            order.date = timezone.now()","            order.save()","            ","            cart = request.session.get('cart', {})","            total = 0","            for id, quantity in cart.items():","                product = get_object_or_404(Product, pk=id)","                total += quantity * product.price","                order_line_item = OrderLineItem(","                    order = order, ","                    product = product, ","                    quantity = quantity","                    )","                order_line_item.save()","                ","            try:","                customer = stripe.Charge.create(","                    amount = int(total * 100),","                    currency = \"EUR\",","                    description = request.user.email,","                    card = payment_form.cleaned_data['stripe_id'],","                )","            except stripe.error.CardError:","                messages.error(request, \"Your card was declined!\")","                ","            if customer.paid:","                messages.error(request, \"You have successfully paid\")","                request.session['cart'] = {}","                return redirect(reverse('products'))","            else:","                messages.error(request, \"Unable to take payment\")","        else:","            print(payment_form.errors)","            messages.error(request, \"We were unable to take a payment with that card!\")","    else:","        payment_form = MakePaymentForm()","        order_form = OrderForm()","        ","    return render(request, \"checkout.html\", {'order_form': order_form, 'payment_form': payment_form, 'publishable': settings.STRIPE_PUBLISHABLE})"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":61,"column":145},"end":{"row":61,"column":145},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1584016635630}